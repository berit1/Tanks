
You have a source code project (a set of files) on your local hard drive and want to create a
new repository, so that you can track changes.

$ git init
Initialized empty Git repository in /Tanks/.git/
$ touch README
Git.rtf	README
$ git add README
Git.rtf	README
$ git commit -m 'first commit'
[master (root-commit) 6dc6ade] first commit
 0 files changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 README
$ git remote add origin git@github.com:berit1/Tanks.git
$ git push origin master
Counting objects: 3, done.
Writing objects: 100% (3/3), 215 bytes, done.
Total 3 (delta 0), reused 0 (delta 0)
To git@github.com:berit1/Tanks.git
 * [new branch]      master -> master
$ 

We  got to the project we want to create an repository in and write "git init" this initiates and empty repository within the project. Then we add a file we want to track by "git add README" for example. We have also created an repository on github which we want to remotly get connected to and be allowed to make commits to. In the end we push the file README to the repository at github!

You want to down load an existing open source project available on the web and then
browse the history of changes in the project.

$ git log
commit e143fbd7a18b291d5bd6985b46decc8bf92106bf
Author: Andrea Franz <andrea@gravityblast.com>
Date:   Sun Sep 27 17:12:38 2009 +0200

    fixed typo

commit f61182c4d2ca65fba6a9f3dcf0fd9175a0e47d31
Author: Andrea Franz <andrea@gravityblast.com>
Date:   Sun Sep 27 17:08:22 2009 +0200

    added themed generation for text pages like home or dashboard

commit 14a4f8d328b4b9806f639fd1fc31d7e4fdcd36ff
Author: Andrea Franz <andrea@gravityblast.com>
Date:   Sat Sep 19 00:26:27 2009 +0200

    fixed resource name generation

commit b872c2761a876c3b8b71e735febfb63de81c6a83
Author: Stas SUSHKOV <stas@net.utcluj.ro>
Date:   Mon Sep 7 21:59:53 2009 +0300

    Some CSS fixes for input and textarea elements in Firefox

commit f96b93794daf5e838b2932222384e390b18cdf63
Author: Stas SUSHKOV <stas@net.utcluj.ro>
Date:   Mon Sep 7 19:29:48 2009 +0300

 With "git log" you get all the changes that have been made with project as you can see above. This perticular project have a lot more commits but we choose to short it down abit!

Your are thinking of developing a complete new part in a project and therefore wants to
create a development branch from the main trunk (called master in Git). You do some
modifications in the new branch and then merge back the changes to the trunk.

$ git branch feature_1
$ git branch
  feature_1
* master
$ git checkout feature_1
Switched to branch 'feature_1'
$ git branch
* feature_1
  master
$ git add Git.rtf
$ git commit -a -m 'update Git file'
 [feature_1 90054ba] update Git file
 1 files changed, 44 insertions(+), 9 deletions(-)
$ git branch
* feature_1
  master
git checkout master
Switched to branch 'master'
git merge feature_1
Updating cbc643b..90054ba
Fast forward
 Git.rtf |   53 ++++++++++++++++++++++++++++++++++++++++++++---------
 1 files changed, 44 insertions(+), 9 deletions(-)
$ git log -n1
commit 90054baeefaaa49e5a5cc0c44d0ed21cde0c350a
Author: Viktor Junling <vikju561@student.liu.se>
Date:   Sat Oct 3 09:51:40 2009 +0200

    update Git file
$ git branch
  feature_1
* master
$ git branch -d feature_1
Deleted branch feature_1 (was 90054ba).
$ git push
Counting objects: 5, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 1.14 KiB, done.
Total 3 (delta 1), reused 0 (delta 0)
To git@github.com:berit1/Tanks.git
   cbc643b..90054ba  master -> master
$

When create a new branch you use ?git branch name_of_branch?  then ?git checkout name_of_branch? to switch to the new branch. Then its just to edit/commit and if you then want to merge back to the master you switch branch to master again and then write ?git merge name_of_branch?. 

You are working on a project and discover a bug in one of the files in the latest version of the
project. You want to figure out who added this bug, so that you can contact him/her.

$ git log -n1
commit a2b4664d13cc7b57bf13c4b989f8fdbdd9858644
Author: Viktor Junling <vikju561@student.liu.se>
Date:   Sat Oct 3 10:13:46 2009 +0200

    word document

If you use the command ?git log ?n1? you?ll get the last commit, what files and the author of the commit. Then you can contact him or her.

You are planning to make a new release of your software and want to mark in the SCM
system the exact version for this release (let us call it version 1.2). You are then editing and
committing some new changes to the repository. Suddenly, your boss says that he wants to
have an email with a snapshot of the source code for version 1.2


